version: '3'
#services:
    # laravel.test:
    #     build:
    #         context: ./vendor/laravel/sail/runtimes/8.0
    #         dockerfile: Dockerfile
    #         args:
    #             WWWGROUP: '${WWWGROUP}'
    #     image: sail-8.0/app
    #     ports:
    #         - '${APP_PORT:-80}:80'
    #     environment:
    #         WWWUSER: '${WWWUSER}'
    #         LARAVEL_SAIL: 1
    #         XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
    #         XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    #     volumes:
    #         - '.:/var/www/html'
    #     networks:
    #         - sail
    #     depends_on:
    #         - redis
networks:
    srm-network:
        driver: bridge
services:

  # nginx
    srm-nginx:
        build:
            context: ./.docker
            dockerfile: nginx.dockerfile
            args:
                - NGINXUSER=${NGINXUSER:-www-data}
                - NGINXGROUP=${NGINXGROUP:-www-data}
        container_name: srm-nginx
        restart: always
        ports:
            - 80:80
        volumes:
            - .:/var/www/html:delegated
            - ./.docker/nginx/conf:/etc/nginx/conf.d

        depends_on:
            - srm-db
        networks:
            - srm-network
        healthcheck:
            test: ["CMD", "service", "nginx", "status"]
            retries: 3
            timeout: 5s

  # mysql
    srm-db:
        image: 'mysql:8.0'
        container_name: srm-db
        restart: always
        tty: true
        ports:
            - '3306:3306'
        environment:
            MYSQL_DATABASE: 'srm'
            MYSQL_USER: 'homestead'
            MYSQL_PASSWORD: 'secret'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
            MYSQL_ROOT_PASSWORD: 'secret'
        volumes:
            - './.docker/mysql/data:/var/lib/mysql'
        networks:
            - srm-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
            
  # phpmyadmin
    srm-phpmyadmin:
        depends_on:
            - srm-db
        image: phpmyadmin/phpmyadmin
        container_name: srm-phpmyadmin
        restart: always
        ports:
            - '8000:80'
        environment:
            PMA_HOST: srm-db
            MYSQL_ROOT_PASSWORD: secret
        networks:
            - srm-network

  # php (srm app)
    php:
        build:
            context: ./.docker
            dockerfile: php.dockerfile
            args:
                - PHPUSER=${PHPUSER:-www-data}
                - PHPGROUP=${PHPGROUP:-www-data}
        container_name: srm-app
        volumes:
            - .:/var/www/html:delegated
        networks:
            - srm-network